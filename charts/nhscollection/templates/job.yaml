apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "nhscollection.job.name" .}}
  labels:
{{ include "nhscollection.labels" . | indent 4}}
spec:
  template:
    spec:
      containers:
      - name: createcollection
        image: {{ include "nhscollection.image.repo" . }}/{{.Values.image.name}}:{{.Values.image.tag}}
        command:
          - 'bash'
          - '-cxve'
          - |
            exec 2>&1
            function wait-for() {
              cmd="$1"
              event="$10"
              COUNTER=0
              SLEEP_TIME=${DELAY:-10}
              MAX_COUNT=${MAX_LOOP:-20}
              echo "Executing: $cmd"

              while [  $COUNTER -lt 20 ]; do
                if $cmd; then
                  echo "$event succeeded"
                  break;
                else
                  COUNTER=$(($COUNTER + 1))
                  echo "Waiting $SLEEP_TIME sec for $event to succeed another $(($MAX_COUNT - $COUNTER)) times"
                  sleep $SLEEP_TIME
                fi
              done
              if [ $COUNTER -eq $MAX_COUNT ]; then
                echo "Giving up on $event ..........."
                return 1
              fi
            }

            function is-solr-running() {
              wget -q -O - "$solr_url" | grep -q -i solr
            }

            function is-solr-cluster-number-reached() {
              SOLR_REPLICA_COUNT=${SOLR_REPLICA_COUNT:-3}
              [ $(curl "$solr_url"/solr/admin/collections?action=clusterstatus | jq '.cluster.live_nodes[]' | wc -l) -eq $SOLR_REPLICA_COUNT ]
            }

            function is-solr-collection-creation-status-completed() {
              curl "$solr_url/solr/admin/collections?action=REQUESTSTATUS&requestid=5555&wt=json" | jq '.status.state' | grep -q 'completed'
            }

            function create-config() {
              config_name="$1"
              res=$(curl "$solr_url/solr/admin/configs?action=CREATE&name=$config_name&baseConfigSet=mongoConnectorBaseConfig&configSetProp.immutable=false&wt=json&omitHeader=true")
              if $(echo $res | jq '.error != null'); then 
                echo "Error creating config $config_name"
                if echo $res | jq '.error.msg' | grep -q "already exists"; then
                  echo "It's OK it already exists"
                else
                  echo "Error: $(echo $res | jq '.error.msg')"
                  exit 1
                fi
              fi
            }

            function create-collection() {
              collection_name="$1"
              config_name="$2"
              curl "$solr_url/solr/admin/collections?action=CREATE&name=$collection_name&async=5555&collection.configName=$config_name&numShards=2&replicationFactor=2&maxShardsPerNode=2&wt=json"
            }

            function clear-async-create-collection-request-id() {
              curl "$solr_url/solr/admin/collections?action=DELETESTATUS&requestid=5555"
            }

            function upload-mongo-fields() {
              collection_name="$1"
              curl -X POST -H "Content-type:application/json" --data-binary @/solr_mongo_fields/fields.json  "$solr_url"/solr/$collection_name/schema;
            }


            solr_url="http://{{ .Values.solr.host }}:{{ .Values.solr.port }}"

            CONFIG_NAME=${CONFIG_NAME:-"mongoConnectorConfig"}
            COLLECTION_NAME=${COLLECTION_NAME:-"nhsCollection"}


            event="solr running"
            if wait-for is-solr-running "$event" ; then
              echo "Successssss.........."
              #  check enough nodes are running in the solr cluster
              event="Enough active solr nodes"
              if wait-for is-solr-cluster-number-reached "$event" ; then
                echo "Yessss........."
                # create config mongoConnectorConfig
                create-config "$CONFIG_NAME" 
                # create collection nhsCollection
                create-collection "$COLLECTION_NAME" "$CONFIG_NAME" 
                # wait on status
                event="Status create collection completed"
                if wait-for is-solr-collection-creation-status-completed "$event" ; then
                  echo "UPLOAD mongo fileds";
                  upload-mongo-fields "$COLLECTION_NAME"
                else
                  clear-async-create-collection-request-id
                  exit 1
                fi
                clear-async-create-collection-request-id
              else
                exit 1
              fi
            else
              exit 1  
            fi            

      restartPolicy: Never
  backoffLimit: 4

